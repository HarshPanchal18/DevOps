---
apiVersion: kafka.strimzi.io/v1beta2
kind: Kafka
metadata:
  name: kafka-data
  namespace: myproject
spec:
  cruiseControl: {}
  entityOperator:
    topicOperator: {}
    userOperator: {}
  kafka:
    config:
      auto.create.topics.enable: true
      default.replication.factor: 3
      inter.broker.protocol.version: '3.9'
      log.message.format.version: '3.9'
      min.insync.replicas: 2
      offsets.topic.num.partitions: 3
      offsets.topic.replication.factor: 1
      ssl.cipher.suites: >-
        TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384,TLS_DHE_RSA_WITH_AES_256_GCM_SHA384,TLS_DHE_RSA_WITH_AES_256_CBC_SHA,TLS_DHE_RSA_WITH_AES_256_CBC_SHA256,TLS_AES_256_GCM_SHA384
      ssl.enabled.protocols: TLSv1.3, TLSv1.2
      ssl.protocol: TLSv1.3
      transaction.state.log.min.isr: 1
      transaction.state.log.replication.factor: 1
    jvmOptions:
      '-Xms': 8192m
      '-Xmx': 8192m
    listeners:
      - authentication:
          type: scram-sha-512
        name: tlsinternal
        port: 9095
        tls: true
        type: internal
      - authentication:
          type: scram-sha-512
        configuration:
          bootstrap:
            nodePort: 30960
          brokers:
            - advertisedHost: 192.168.26.25
              broker: 0
              nodePort: 30961
            - advertisedHost: 192.168.26.25
              broker: 0
              nodePort: 30961
        name: tlsexternal
        port: 9096
        tls: true
        type: nodeport
      - name: plain
        port: 9092
        tls: false
        type: internal
      - configuration:
          bootstrap:
            nodePort: 30940
          brokers:
            - advertisedHost: 192.168.26.25
              broker: 0
              nodePort: 30921
            - advertisedHost: 192.168.26.25
              broker: 0
              nodePort: 30921
        name: external
        port: 9094
        tls: false
        type: nodeport
    replicas: 3
    storage:
      type: jbod
      volumes:
        - class: sc-kafka
          deleteClaim: false
          id: 0
          size: 5Gi
          type: persistent-claim
    template:
      kafkaContainer:
        securityContext:
          privileged: true
      pod:
        metadata:
          annotations:
            sidecar.istio.io/inject: 'false'
        securityContext:
          runAsGroup: 0
          runAsUser: 0
    version: 3.9.0
  kafkaExporter:
    groupRegex: .*
    template:
      pod:
        metadata:
          annotations:
            sidecar.istio.io/inject: 'false'
    topicRegex: .*
  zookeeper:
    replicas: 1
    storage:
      class: sc-zookeeper
      deleteClaim: false
      id: 0
      size: 5Gi
      type: persistent-claim
    template:
      pod:
        metadata:
          annotations:
            sidecar.istio.io/inject: 'false'